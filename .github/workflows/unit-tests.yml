name: unit-tests
run-name: ${{ github.head_ref || github.ref_name }}-unit-tests

on:
  workflow_call:
    inputs:
      os:
        required: false
        type: string
        default: 'ubuntu-22.04'
      godot-version:
        required: true
        type: string
      godot-status:
        required: true
        type: string

  workflow_dispatch:
    inputs:
      os:
        required: false
        type: string
        default: 'ubuntu-22.04'
      godot-version:
        required: true
        type: string
      godot-status:
        required: true
        type: string

concurrency:
  group: unit-tests-${{ github.head_ref || github.ref_name }}-${{ inputs.godot-version }}
  cancel-in-progress: true

jobs:

  unit-test-runner:
    permissions:
      actions: write
      contents: read

    name: "Unit Tests With GdUnit4 TestRunner"
    runs-on: ${{ inputs.os }}
    timeout-minutes: 5

    steps:
      - uses: actions/checkout@v4
        with:
          lfs: true

      - name: 'Test GdUnit4 - Godot_${{ inputs.godot-version }}-${{ inputs.godot-status }}-net'
        uses: MikeSchulze/gdUnit4-action@v1.0.3
        with:
          godot-version: ${{ inputs.godot-version }}
          godot-status: ${{ inputs.godot-status }}
          godot-net: true
          paths: |
            res://test/src
          timeout: 5
          retries: 3 # We have set the number of repetitions to 3 because Godot mono randomly crashes during C# tests
          report-name: report_Godot${{ inputs.godot-version }}-${{ inputs.godot-status }}-net.xml


  unit-test-adapter:
    name: "Unit Tests With VS-TestAdapter"
    runs-on: ${{ inputs.os }}
    timeout-minutes: 5
    env:
      REPORT_NAME: "TestAdapterReport_${{ inputs.os }}-${{ inputs.godot-version }}"

    steps:
      - uses: actions/checkout@v4
        with:
          lfs: true

      - name: "Install Godot Mono ${{ inputs.godot-version }}"
        uses: ./.github/actions/godot-install
        with:
          godot-version: ${{ inputs.godot-version }}
          godot-mono: true
          godot-status-version: ${{ inputs.godot-status }}
          godot-bin-name: 'linux_x86_64'
          godot-cache-path: '~/godot-linux'

      - uses: actions/setup-dotnet@v4
        with:
          dotnet-version: 7.0.x

      - name: "Compile C#"
        if: ${{ !cancelled() }}
        run: |
          echo "prebuild the nuget packages"
          dotnet build ./api/gdUnit4Api.csproj
          dotnet build ./testadapter/gdUnit4TestAdapter.csproj
          dotnet restore
          dotnet build

      - name: "Run Unit Tests"
        if: ${{ !cancelled() }}
        timeout-minutes: 5
        env:
          GODOT_BIN: "/home/runner/godot-linux/godot"
        run: |
          $GODOT_BIN --path ./test --headless --build-solutions --quit-after 20
          xvfb-run --auto-servernum dotnet test ./test/gdUnit4Test.csproj --no-build --settings ./test/.runsettings-ci

      - name: "Publish Unit Test Reports"
        if: ${{ !cancelled() }}
        uses: ./.github/actions/publish-test-report
        with:
          report-name: ${{ env.REPORT_NAME }}

      - name: "Upload Unit Test Reports"
        if: ${{ !cancelled() }}
        uses: ./.github/actions/upload-test-report
        with:
          report-name: ${{ env.REPORT_NAME }}

  unit-test-example:
    name: "Unit Tests Example project using nuget gdUnit4.test.adapter"
    runs-on: ${{ inputs.os }}
    timeout-minutes: 3
    env:
      REPORT_NAME: "Example_Report_${{ inputs.os }}-${{ inputs.godot-version }}"

    steps:
      - uses: actions/checkout@v4
        with:
          lfs: true

      - name: "Install Godot Mono ${{ inputs.godot-version }}"
        uses: ./.github/actions/godot-install
        with:
          godot-version: ${{ inputs.godot-version }}
          godot-mono: true
          godot-status-version: ${{ inputs.godot-status }}
          godot-bin-name: 'linux_x86_64'
          godot-cache-path: '~/godot-linux'

      - uses: actions/setup-dotnet@v4
        with:
          dotnet-version: 7.0.x

      - name: "Compile C#"
        if: ${{ !cancelled() }}
        run: |
          echo "prebuild the nuget packages"
          dotnet build ./api/gdUnit4Api.csproj
          dotnet build ./testadapter/gdUnit4TestAdapter.csproj
          dotnet restore
          dotnet build

      - name: "Run Unit Tests"
        if: ${{ !cancelled() }}
        timeout-minutes: 5
        env:
          GODOT_BIN: "/home/runner/godot-linux/godot"
        run: |
          $GODOT_BIN --path ./example --headless --build-solutions --quit-after 20
          xvfb-run --auto-servernum dotnet test ./example/exampleProject.csproj --no-build --settings ./test/.runsettings-ci || true

      - name: "Publish Unit Test Reports"
        if: ${{ !cancelled() }}
        uses: ./.github/actions/publish-test-report
        with:
          report-name: ${{ env.REPORT_NAME }}

      - name: "Upload Unit Test Reports"
        if: ${{ !cancelled() }}
        uses: ./.github/actions/upload-test-report
        with:
          report-name: ${{ env.REPORT_NAME }}
